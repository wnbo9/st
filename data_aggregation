library(data.table)
library(dplyr)
library(ggplot2)
library(parallel)

dat = fread("stereo/L20220116011.export.bin1.txt", header = T)
colnames(dat) = c("geneID", "y", "x", "MIDCounts")
dat$y = max(dat$y) - dat$y
dat = cbind(dat, c(1:dim(dat)[1]))
dat = cbind(dat, rep(-1, dim(dat)[1]))
colnames(dat) = c("geneID", "y", "x", "MIDCounts", "ID", "cellID")
dat$y[which(dat$y==0)] = 1

info = fread("stereo/cell.csv", header = T)
info = info[,-1]
info2 = as.matrix(info)
rm(info)


myFun=function(obj){
  c1 = as.integer(obj[['y']])
  c2 = as.integer(obj[['x']])
  return(info2[c1,c2][[1]])
}
info2

dim(dat)[1]/1000000 #156.5
for (i in 157) {
  print(i)
  if (i!=157){
    dat2 = dat[((i-1)*1000000+1):(i*1000000),]
    vec = apply(dat2, 1, myFun)
    dat$cellID[((i-1)*1000000+1):(i*1000000)] = vec
  } else{
    dat2 = dat[((i-1)*1000000+1):156586746,]
    vec = apply(dat2, 1, myFun)
    dat$cellID[((i-1)*1000000+1):156586746] = vec
  }
}
1910-0
1916-15
1921-30
1927-51

# keep what we need
dat_keep = dat %>% filter(cellID != 0)


# aggregate the gene in the same cell
#tt = dat_keep %>% filter(cellID==10 | cellID==11)

dat_temp = dat_keep %>% group_by(geneID, cellID) %>% summarise(sum = sum(MIDCounts))


# reshape to DGE
library(reshape2)
DGE = dcast(dat_temp, geneID ~ cellID)
DGE[is.na(DGE)] = 0




